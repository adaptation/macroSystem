// Generated by CoffeeScript 1.4.0
(function() {
  var traceBlock, _;

  _ = require('underscore');

  exports.trace = function(Node, env) {
    var left, newEnv;
    if (env == null) {
      env = null;
    }
    switch (Node.type) {
      case "Program":
        exports.trace(Node.body[0], env);
        return Node;
      case "ExpressionStatement":
        return exports.trace(Node.expr, env);
      case "FunctionExpression":
        return exports.trace(Node.body, env);
      case 'BinaryExpression':
        return env;
      case "BlockStatement":
        if (env === null) {
          newEnv = {
            variable: [],
            parent: null
          };
        } else {
          newEnv = {
            variable: [],
            parent: env
          };
        }
        Node.env = traceBlock(Node.block, newEnv);
        return env;
      case "AssignmentExpression":
        left = Node.left.toString();
        if (!(_.find(env.variable, function(x) {
          return x === left;
        }))) {
          env.variable.push(left);
        }
        return env;
      default:
        console.log("Trace error");
        return env;
    }
  };

  traceBlock = function(block, env) {
    var elem, _i, _len;
    for (_i = 0, _len = block.length; _i < _len; _i++) {
      elem = block[_i];
      exports.trace(elem, env);
    }
    return env;
  };

}).call(this);
